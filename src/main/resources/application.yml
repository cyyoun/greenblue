spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/greenblue
    username: greenblue
    password: java1234
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  messages:
    basename: messages, errors
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    format_sql: true
  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 30MB
  redis:
    host: localhost
    port: 6379
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 445191193490-26lh1n17l8ocdsfc6hk8h663559ee1a5.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile
          naver:
            client-id: i3zvvUaf5k_jaBK1Ex0c
            client-secret: YvMmHgiol7
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code #code 방식
            redirect-uri: http://localhost:8080/login/oauth2/code/naver #네이버는 provider가 없기 때문에 직접 등록 필요


        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response #회원 정보를 json으로 받는데 response라는 키 값으로 naver가 리턴해줌

logging:
  level:
#    org.springframework: debug
    root: info
#    org.hibernate.SQL: debug

file:
  dir:
    product: D:\cyyoun\projects\private\greenblue\src\main\resources\static\img\product\
    review: D:\cyyoun\projects\private\greenblue\src\main\resources\static\img\review\